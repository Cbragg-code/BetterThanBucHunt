name: Test and Deploy Pipeline

on:
  push:
    branches:
      - PBI-146
  workflow_dispatch:

jobs:
  
  ec2-start:
    runs-on: ubuntu-latest
    steps:
      # ... (AWS credential configuration steps)
      - name: Start EC2 Instance
        run: aws ec2 start-instances --instance-ids ${{ secrets.INSTANCE_ID }}
      - name: Wait for the instance to enter the running state
        run: aws ec2 wait instance-running --instance-ids ${{ secrets.INSTANCE_ID }}
      - name: Wait for the instance to be fully operational
        run: |
          for i in {1..60}; do  # 60 attempts with a 10-second pause between each
            if ssh -o "StrictHostKeyChecking=accept-new" -i BucStop2024.pem ec2-user@${{ secrets.SSH_HOST }} 'echo "EC2 instance is up and running"'; then
              break
            else
              echo "Waiting for EC2 instance to initialize..."
              sleep 10
            fi
          done
        
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_UNAME }}
          password: ${{ secrets.DOCKER_PW }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./BucStop/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_UNAME }}/bucstop:latest

  aws-deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2
        run: |
          echo "${{ secrets.SSH_KEY }}" > BucStop2024.pem
          chmod 600 BucStop2024.pem
          ssh -o "StrictHostKeyChecking=accept-new" -i BucStop2024.pem ec2-user@${{ secrets.SSH_HOST }} './redeployBucstop.sh'

  run-tests:
    needs: aws-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build BucStop

      - name: Run Regression Test
        run: dotnet test BucStop/BucStop.csproj --filter FullyQualifiedName=BucStop.Tests.RegressionTest.NavBucStop
  
  ec2-stop:
    needs: run-tests
    runs-on: ubuntu-latest
    if: always() # This ensures the instance is stopped even if previous steps fail
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 Instance
        run: aws ec2 stop-instances --instance-ids ${{ secrets.INSTANCE_ID }}

