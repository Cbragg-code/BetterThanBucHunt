@model List<BucStop.Models.Game>
<!-- This is the games list page. Each of the games is loaded in from the model using the game's ID value -->
<h1>List of Games</h1>

<div class="row gy-4" style="margin-left: 20px; margin-right: 20px;">
    <!-- Goes through the list of games held in the Game model and lists the pertinent information.-->
    @foreach (var game in Model)
    {
        <div class="col-sm-3 d-flex">
            <div class="card">

                <div class="popup" onclick="myFunction('@game.Id')">
                    <img src="@game.Thumbnail" class="card-img-top">
                    <h5 class="card-title">@game.Title</h5>
                    <span class="popuptext" id="popup-@game.Id">
                        <span class="close-btn" onclick="closePopup(event, '@game.Id')">X</span>
                        <br />

                        <!-- Preview Image Placeholder -->
                        <div class="preview-image">
                            <img src="@game.Preview" alt="Game Preview" class="card-img-popup">
                        </div>

                        <!-- Leaderboard -->
                        <div class="leaderboard">

                            <p class="leaderboard-text">Leaderboard</p>

                            @{
                                var initials = game.Initials.Split(',');
                                var highScores = game.HighScores.Split(',');
                            }
                            <!-- Populates leaderboard -->
                            @if (initials.Length == highScores.Length)
                            {
                                <ol class="leaderboard-items">
                                    @for (int i = 0; i < initials.Length; i++)
                                    {
                                        <li>
                                            @initials[i]: @highScores[i]
                                        </li>
                                    }
                                </ol>
                            }
                            else
                            {
                                <p class="error-text">Error: Initials and HighScores arrays have different lengths.</p>
                            }


                            <p class="text-muted">Play Count: @game.PlayCount</p>
                            <!-- Play Button -->
                            <div class="play-button">
                                <a href="@Url.Action("Play", "Games", new { id = game.Id })">
                                    <button class="btn btn-primary">Play</button>
                                </a>
                            </div>
                        </div>
                    </span>
                </div>

            </div>
        </div>
    }

</div>
<script>
    function closePopup(event, gameId) {
        event.stopPropagation(); // Prevent the click event from propagating to the parent div
        var popup = document.getElementById("popup-" + gameId);
        popup.classList.remove("show");
    }

    // When the user clicks on <div>, open the popup
    function myFunction(gameId) {
        // Close all popups first
        var popups = document.getElementsByClassName("popuptext");
        for (var i = 0; i < popups.length; i++) {
            popups[i].classList.remove("show");
        }

        // Then open the popup associated with the clicked game
        var popup = document.getElementById("popup-" + gameId);
        popup.classList.toggle("show");
    }
</script>
